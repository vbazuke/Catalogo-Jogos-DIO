<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExemploApiCatalogoJogos</name>
    </assembly>
    <members>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.Obter(System.Int32,System.Int32)">
            <summary>
            Buscar todos os jogos de forma paginada
            </summary>
            <remarks>
            Não é possível retornar os jogos sem paginação
            </remarks>
            <param name="pagina">Indica qual página está sendo consultada. Mínimo 1</param>
            <param name="quantidade">Indica a quantidade de reistros por página. Mínimo 1 e máximo 50</param>
            <response code="200">Retorna a lista de jogos</response>
            <response code="204">Caso não haja jogos</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.Obter(System.Guid)">
            <summary>
            Buscar um jogo pelo seu Id
            </summary>
            <param name="idJogo">Id do jogo buscado</param>
            <response code="200">Retorna o jogo filtrado</response>
            <response code="204">Caso não haja jogo com este id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.InserirJogo(ExemploApiCatalogoJogos.InputModel.JogoInputModel)">
            <summary>
            Inserir um jogo no catálogo
            </summary>
            <param name="jogoInputModel">Dados do jogo a ser inserido</param>
            <response code="200">Cao o jogo seja inserido com sucesso</response>
            <response code="422">Caso já exista um jogo com mesmo nome para a mesma produtora</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.AtualizarJogo(System.Guid,ExemploApiCatalogoJogos.InputModel.JogoInputModel)">
            <summary>
            Atualizar um jogo no catálogo
            </summary>
            /// <param name="idJogo">Id do jogo a ser atualizado</param>
            <param name="jogoInputModel">Novos dados para atualizar o jogo indicado</param>
            <response code="200">Cao o jogo seja atualizado com sucesso</response>
            <response code="404">Caso não exista um jogo com este Id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.AtualizarJogo(System.Guid,System.Double)">
            <summary>
            Atualizar o preço de um jogo
            </summary>
            /// <param name="idJogo">Id do jogo a ser atualizado</param>
            <param name="preco">Novo preço do jogo</param>
            <response code="200">Cao o preço seja atualizado com sucesso</response>
            <response code="404">Caso não exista um jogo com este Id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosController.ApagarJogo(System.Guid)">
            <summary>
            Excluir um jogo
            </summary>
            /// <param name="idJogo">Id do jogo a ser excluído</param>
            <response code="200">Cao o preço seja atualizado com sucesso</response>
            <response code="404">Caso não exista um jogo com este Id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosTagsController.ObterTodos">
            <summary>
            Buscar todas relações tag-jogo
            </summary>
            <remarks>
            Não é possível retornar os tags-jogo
            </remarks>
            <response code="200">Retorna a lista de tags-jogo</response>
            <response code="204">Caso não haja tags-jogo</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosTagsController.Obter(System.Int32)">
            <summary>
            Buscar um tag-jogo pelo seu Id
            </summary>
            <param name="idTagJogo">Id do tag buscado</param>
            <response code="200">Retorna o tag-jogo  filtrado</response>
            <response code="204">Caso não haja tag-jogo  com este id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosTagsController.InserirTag(ExemploApiCatalogoJogos.InputModel.JogoTagInputModel)">
            <summary>
            Inserir uma relação jogo-tag
            </summary>
            <param name="jogoTag">Dados do jogo-tag a ser inserido</param>
            <response code="200">Cao o tag seja inserido com sucesso</response>
            <response code="422">Caso já exista um tag com mesmo nome para a mesma produtora</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.JogosTagsController.ApagarTag(System.Int32)">
            <summary>
            Excluir uma relação tag-jogo
            </summary>
            /// <param name="idTagJogo">Id do tag-jogo a ser excluído</param>
            <response code="200">Caso o tag-jogo seja deletado com sucesso</response>
            <response code="404">Caso não exista um tag-jogo com este Id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.TagsController.ObterTodos">
            <summary>
            Buscar todos os tags de forma paginada
            </summary>
            <remarks>
            Não é possível retornar os tags sem paginação
            </remarks>
            <response code="200">Retorna a lista de tags</response>
            <response code="204">Caso não haja tags</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.TagsController.Obter(System.Guid)">
            <summary>
            Buscar um tag pelo seu Id
            </summary>
            <param name="idTag">Id do tag buscado</param>
            <response code="200">Retorna o tag filtrado</response>
            <response code="204">Caso não haja tag com este id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.TagsController.InserirTag(ExemploApiCatalogoJogos.InputModel.TagInputModel)">
            <summary>
            Inserir um tag no catálogo
            </summary>
            <param name="tagInputModel">Dados do tag a ser inserido</param>
            <response code="200">Cao o tag seja inserido com sucesso</response>
            <response code="422">Caso já exista um tag com mesmo nome para a mesma produtora</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.TagsController.AtualizarJogo(System.Guid,System.String)">
            <summary>
            Atualizar o preço de um jogo
            </summary>
            /// <param name="idJogo">Id do jogo a ser atualizado</param>
            <param name="nome">Novo preço do jogo</param>
            <response code="200">Cao o preço seja atualizado com sucesso</response>
            <response code="404">Caso não exista um jogo com este Id</response>   
        </member>
        <member name="M:ExemploApiCatalogoJogos.Controllers.V1.TagsController.ApagarTag(System.Guid)">
            <summary>
            Excluir um tag
            </summary>
            /// <param name="idTag">Id do tag a ser excluído</param>
            <response code="200">Caso o tag seja deletado com sucesso</response>
            <response code="404">Caso não exista um tag com este Id</response>   
        </member>
    </members>
</doc>
